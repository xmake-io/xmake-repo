--- a/cmake/Modules/SetSystemProcessor.cmake
+++ b/cmake/Modules/SetSystemProcessor.cmake
@@ -11,9 +11,10 @@ macro (set_system_processor)
     if (NOT DEFINED CMAKE_SYSTEM_PROCESSOR)
       include (CheckCSourceCompiles)
       set (CPU_LINES
-        "#if defined __x86_64__ || defined _M_X64  /*\;x86_64\;*/"
-        "#if defined __i386__   || defined _M_IX86 /*\;x86_32\;*/"
-        "#if defined __arm__    || defined _M_ARM  /*\;arm\;*/"
+              "#if defined __x86_64__  || defined _M_X64   /*\;x86_64\;*/"
+              "#if defined __i386__    || defined _M_IX86  /*\;x86_32\;*/"
+              "#if defined __arm__     || defined _M_ARM   /*\;arm\;*/"
+              "#if defined __aarch64__ || defined _M_ARM64 /*\;arm64\;*/"
         )
       foreach (CPU_LINE ${CPU_LINES})
         string (CONCAT CPU_SOURCE "${CPU_LINE}" "
--- a/src/pffft-wrap.c
+++ b/src/pffft-wrap.c
@@ -40,7 +40,11 @@ static void pffft_zconvolve(PFFFT_Setup *s, const float *a, const float *b, floa
 
   float ar, ai, br, bi;
 
-#ifdef __arm__
+#if defined(__arm__) || defined(__aarch64__) || defined(_M_ARM64)
+
+#if defined _MSC_VER
+#define __builtin_prefetch(_p)  __prefetch(_p)
+#endif
   __builtin_prefetch(va);
   __builtin_prefetch(vb);
   __builtin_prefetch(va+2);
--- a/src/pffft.c
+++ b/src/pffft.c
@@ -157,7 +157,7 @@ typedef __m128 v4sf;
 /*
   ARM NEON support macros
 */
-#elif !defined(PFFFT_SIMD_DISABLE) && defined(__arm__)
+#elif !defined(PFFFT_SIMD_DISABLE) && (defined(__arm__) || defined(__aarch64__) || defined(_M_ARM64))
 #  include <arm_neon.h>
 typedef float32x4_t v4sf;
 #  define SIMD_SZ 4
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -81,7 +81,6 @@ target_link_libraries (${PROJECT_NAME} PRIVATE ${LIBS} ${LIBM_LIBRARIES})
 set_target_properties (${PROJECT_NAME} PROPERTIES
   VERSION "${SO_VERSION}"
   SOVERSION ${SO_VERSION_MAJOR}
-  INSTALL_NAME_DIR ${LIB_INSTALL_DIR}
   LINK_INTERFACE_LIBRARIES ""
   PUBLIC_HEADER "${PROJECT_NAME}.h")
 if (BUILD_FRAMEWORK)
@@ -105,7 +104,6 @@ if (WITH_LSR_BINDINGS)
   set_target_properties (${LSR} PROPERTIES
     VERSION "${LSR_SO_VERSION}"
     SOVERSION ${LSR_SO_VERSION_MAJOR}
-    INSTALL_NAME_DIR ${LIB_INSTALL_DIR}
     LINK_INTERFACE_LIBRARIES ""
     PUBLIC_HEADER "${LSR}.h")
   if (BUILD_FRAMEWORK)
