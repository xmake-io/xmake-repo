diff --git a/aui.views/CMakeLists.txt b/aui.views/CMakeLists.txt
index dfe6b18b..c5c1fb27 100644
--- a/aui.views/CMakeLists.txt
+++ b/aui.views/CMakeLists.txt
@@ -9,10 +9,14 @@ find_package(OpenGL)
 auib_use_system_libs_end()
 
 if (OPENGL_FOUND OR ANDROID OR IOS)
-    auib_import(Freetype https://github.com/freetype/freetype/archive/refs/tags/VER-2-13-3.zip ARCHIVE
-                CONFIG_ONLY
-                CMAKE_ARGS -DFT_DISABLE_BZIP2=ON -DFT_DISABLE_PNG=ON -DFT_DISABLE_HARFBUZZ=ON -DFT_DISABLE_BROTLI=ON
-    )
+    if (AUIB_DISABLE)
+        find_package(freetype CONFIG REQUIRED)
+    else ()
+        auib_import(Freetype https://github.com/freetype/freetype/archive/refs/tags/VER-2-13-3.zip ARCHIVE
+                    CONFIG_ONLY
+                    CMAKE_ARGS -DFT_DISABLE_BZIP2=ON -DFT_DISABLE_PNG=ON -DFT_DISABLE_HARFBUZZ=ON -DFT_DISABLE_BROTLI=ON
+        )
+    endif ()
 
     if (NOT TARGET Freetype::Freetype)
         message(FATAL_ERROR "Freetype not imported")
@@ -20,29 +24,40 @@ if (OPENGL_FOUND OR ANDROID OR IOS)
 
 
     if (AUI_PLATFORM_WIN OR AUI_PLATFORM_LINUX OR AUI_PLATFORM_MACOS)
-        auib_import(GLEW https://github.com/aui-framework/glew-cmake
-                CMAKE_WORKING_DIR "build/cmake"
-                VERSION a80a1dc)
+        if (AUIB_DISABLE)
+            find_package(glew CONFIG REQUIRED)
+        else ()
+            auib_import(GLEW https://github.com/aui-framework/glew-cmake
+                    CMAKE_WORKING_DIR "build/cmake"
+                    VERSION a80a1dc)
+        endif ()
     endif ()
 
     aui_module(aui.views EXPORT aui)
     aui_enable_tests(aui.views)
 
     if (AUI_PLATFORM_LINUX)
-        auib_use_system_libs_begin()
-        find_package(PkgConfig REQUIRED)
+        if (AUIB_DISABLE)
+            include(FindPkgConfig)
+            pkg_check_modules(DBUS REQUIRED IMPORTED_TARGET dbus-1)
+            pkg_check_modules(GTK3 REQUIRED IMPORTED_TARGET gtk+-3.0)
+            aui_link(aui.views PRIVATE X11::X11 X11::Xrandr X11::Xcursor X11::Xi PkgConfig::DBUS PkgConfig::GTK3 Fontconfig::Fontconfig)
+        else ()
+            auib_use_system_libs_begin()
+            find_package(PkgConfig REQUIRED)
 
-        pkg_check_modules(DBUS REQUIRED dbus-1)
-        include_directories(${DBUS_INCLUDE_DIRS})
-        link_directories(${DBUS_LIBRARY_DIRS})
+            pkg_check_modules(DBUS REQUIRED dbus-1)
+            include_directories(${DBUS_INCLUDE_DIRS})
+            link_directories(${DBUS_LIBRARY_DIRS})
 
-        pkg_check_modules(GTK3 REQUIRED gtk+-3.0)
-        include_directories(${GTK3_INCLUDE_DIRS})
-        link_directories(${GTK3_LIBRARY_DIRS})
+            pkg_check_modules(GTK3 REQUIRED gtk+-3.0)
+            include_directories(${GTK3_INCLUDE_DIRS})
+            link_directories(${GTK3_LIBRARY_DIRS})
 
-        auib_use_system_libs_end()
+            auib_use_system_libs_end()
 
-        aui_link(aui.views PRIVATE X11::X11 X11::Xrandr X11::Xcursor X11::Xi ${DBUS_LIBRARIES} ${GTK3_LIBRARIES} Fontconfig::Fontconfig)
+            aui_link(aui.views PRIVATE X11::X11 X11::Xrandr X11::Xcursor X11::Xi ${DBUS_LIBRARIES} ${GTK3_LIBRARIES} Fontconfig::Fontconfig)
+        endif ()
     endif ()
 
     if (NOT AUI_PLATFORM_WINDOWS)
@@ -92,17 +107,29 @@ if (OPENGL_FOUND OR ANDROID OR IOS)
         aui_link(aui.views PRIVATE Freetype::Freetype)
         aui_link(aui.views PRIVATE OpenGL::GL)
 
-        if (AUI_PLATFORM_LINUX)
-            # glew defines unwanted dependencies to OpenGL which may vary from distro to distro; silence them
-            set_target_properties(GLEW::GLEW PROPERTIES INTERFACE_LINK_LIBRARIES "")
+        if (AUIB_DISABLE)
+            if (AUI_PLATFORM_LINUX)
+                # glew defines unwanted dependencies to OpenGL which may vary from distro to distro; silence them
+                set_target_properties(glew::glew PROPERTIES INTERFACE_LINK_LIBRARIES "")
+                auib_use_system_libs_begin()
+                find_package(X11 REQUIRED)
+                find_package(Fontconfig REQUIRED)
+                auib_use_system_libs_end()
+            endif ()
+            aui_link(aui.views PUBLIC glew::glew)
+        else ()
+            if (AUI_PLATFORM_LINUX)
+                # glew defines unwanted dependencies to OpenGL which may vary from distro to distro; silence them
+                set_target_properties(GLEW::GLEW PROPERTIES INTERFACE_LINK_LIBRARIES "")
 
-            auib_use_system_libs_begin()
-            find_package(X11 REQUIRED)
-            find_package(Fontconfig REQUIRED)
-            auib_use_system_libs_end()
+                auib_use_system_libs_begin()
+                find_package(X11 REQUIRED)
+                find_package(Fontconfig REQUIRED)
+                auib_use_system_libs_end()
 
+            endif ()
+            aui_link(aui.views PUBLIC GLEW::GLEW)
         endif ()
-        aui_link(aui.views PUBLIC GLEW::GLEW)
 
         if (WIN32)
             aui_link(aui.views PRIVATE dwmapi)
